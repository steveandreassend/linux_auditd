## STIG
-a always,exit -F arch=b32 -S creat -S ftruncate -S open -S open_by_handle_at -S openat -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
-a always,exit -F arch=b64 -S creat -S ftruncate -S open -S open_by_handle_at -S openat -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=access
-a always,exit -F arch=b32 -S creat -S ftruncate -S open -S open_by_handle_at -S openat -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access
-a always,exit -F arch=b64 -S creat -S ftruncate -S open -S open_by_handle_at -S openat -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=access

## xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_creat
## Record Unsuccessful Access Attempts to Files - creat

## xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_ftruncate
## Record Unsuccessful Access Attempts to Files - ftruncate

## xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_open
## Record Unsuccessful Access Attempts to Files - open

## xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_openat
## Record Unsuccessful Access Attempts to Files - openat

## xccdf_org.ssgproject.content_rule_audit_rules_unsuccessful_file_modification_truncate
## Record Unsuccessful Access Attempts to Files - truncate

## CIS 4.1.10 Ensure unsuccessful unauthorized file access attempts are collected
## Monitor for unsuccessful attempts to access files. The parameters below are associated
## with system calls that control creation ( creat ), opening ( open , openat ) and truncation (
## truncate , ftruncate ) of files. An audit log record will only be written if the user is a non-
## privileged user (auid>=1000), is not a Daemon event (auid=4294967295) and if the system
## call returned EACCES (permission denied to the file) or EPERM (some other permanent
## error associated with the specific system call). All audit records will be tagged with the
## identifier "access."

## Duplicated:
## -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
## -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access
## -a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access
## -a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access

## Ensure auditd Rules For Unauthorized Attempts To open Are Ordered Correctly

## The audit system should collect detailed unauthorized file accesses for all users and root.
## To correctly identify unsuccessful creation, unsuccessful modification and unsuccessful access of files
## via open syscall the audit rules collecting these events need to be in certain order. The more specific
## rules need to come before the less specific rules. The reason for that is that more specific rules cover a
## subset of events covered in the less specific rules, thus, they need to come before to not be overshadowed
## by less specific rules, which match a bigger set of events. Make sure that rules for unsuccessful calls of
## open syscall are in the order shown below.

## -a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
##-a always,exit -F arch=b32 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
##-a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
##-a always,exit -F arch=b32 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
##-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
##-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access

## If the system is 64 bit then also add the following lines:
-a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
-a always,exit -F arch=b64 -S open -F a1&0100 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-create
-a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
-a always,exit -F arch=b64 -S open -F a1&01003 -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-modification
-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=unset -F key=unsuccesful-access
